# Branches that trigger a build on commit
trigger:
- master
- release_v*

# Branches that trigger builds on PR
pr:
  branches:
    include:
    - master
    - release_v*
  paths:
    include:
    - cmake/*
    - lib/*
    - pipelines/*
    - resources/*
    - samples/*
    - src/*
    - test/*
    - CMakeLists.txt
    - makeaosp.sh
    - makeios.sh
    - makelinux.sh
    - makemac.sh
    - makewin.cmd
    - manifest.cmakein

jobs:
- job: iOS
  pool:
    name: Hosted macOS
  strategy:
    # TODO: add builds using xerces if needed.
    matrix:
      debug_x86:
        _arguments: -b Debug
        _artifact: iOS-x86chk
      release_x86:
        _arguments: -b MinSizeRel
        _artifact: iOS-x86
      release_x86_nobundle:
        _arguments: -b MinSizeRel -sb
        _artifact: iOS-x86-nobundle
      release_arm64:
        _arguments: -b MinSizeRel -arch arm64
        _artifact: iOS-arm64
      release_arm64_nobundle:
        _arguments: -b MinSizeRel -arch arm64 -sb
        _artifact: iOS-arm64-nobundle
  steps:
  - task: Bash@3
    displayName: Build
    inputs:
      targetType: filePath
      filePath: ./makeios.sh
      arguments: $(_arguments)
      failOnStderr: true
    condition: succeeded()

    # Note: We skip BVTs in Debug mode because of assert() and release_arm64
    # Only do BVTs for release_x86 because the emulator
  - task: Bash@3
    displayName: iOS BVTs
    inputs:
      targetType: filePath
      filePath: './src/test/mobile/testios.sh'
      arguments: '-p iOSBVT/iOSBVT.xcodeproj -o TEST-MsixSDK-$(_artifact).xml'
      workingDirectory: './src/test/mobile/'
      failOnStderr: true
    condition: and(succeeded(), contains(variables['Agent.JobName'], 'release_x86'))
  
  - task: PublishTestResults@2
    displayName: 'Publish $(_artifact) Test Results'
    inputs:
      failTaskOnFailedTests: true
      testRunTitle: $(_artifact)
    condition: and(succeededOrFailed(), contains(variables['Agent.JobName'], 'release'))

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: .vs
      Contents: |
        bin/makemsix
        bin/makemsix.dSYM/**
        lib/libmsix*
        lib/libmsix*/**
        src/msix/AppxPackaging.hpp
        src/msix/MSIXWindows.hpp
        src/msix/MsixErrors.hpp
        Package.nuspec
        build/**
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact $(_artifact)'
    inputs:
      ArtifactName: $(_artifact)
    condition: succeededOrFailed()
