# Branches that trigger a build on commit
trigger:
- master
- release_v*

# Branches that trigger builds on PR
pr:
  branches:
    include:
    - master
    - release_v*
  paths:
    include:
    - cmake/*
    - lib/*
    - pipelines/*
    - resources/*
    - samples/*
    - src/*
    - test/*
    - CMakeLists.txt
    - makeaosp.sh
    - makeios.sh
    - makelinux.sh
    - makemac.sh
    - makewin.cmd
    - manifest.cmakein

jobs:
- job: Linux
  pool:
    name: Hosted Ubuntu 1604
  strategy:
    # TODO: add builds using xerces if needed.
    matrix:
      debug_nopack:
        _arguments: -b Debug
        _artifact: LINUXchk
      release_nopack:
        _arguments: -b MinSizeRel
        _artifact: LINUX
      release_nobundle:
        _arguments: -b MinSizeRel -sb
        _artifact: LINUX-nobundle
      release_validation_parser:
        _arguments: -b MinSizeRel -vp
        _artifact: LINUX-ValidationParser
      release_pack:
        _arguments: -b MinSizeRel --pack
        _artifact: LINUX-pack
      debug_pack:
        _arguments: -b Debug --pack
        _artifact: LINUXchk-pack

  steps:
  - task: Bash@3
    displayName: Build
    inputs:
      targetType: filePath
      filePath: ./makelinux.sh
      arguments: $(_arguments)
      failOnStderr: true
    condition: succeeded()

    # Note: We skip BVTs in Debug mode because of assert()
  - script: 'msixtest/msixtest -s -r junit -o TEST-MsixSDK-$(_artifact).xml'
    workingDirectory: .vs
    displayName: 'Linux BVTs'
    condition: and(succeeded(), contains(variables['Agent.JobName'], 'release'))
  
  - task: PublishTestResults@2
    displayName: 'Publish $(_artifact) Test Results'
    inputs:
      failTaskOnFailedTests: true
      testRunTitle: $(_artifact)
    condition: and(succeededOrFailed(), contains(variables['Agent.JobName'], 'release'))

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: .vs
      Contents: |
        bin/makemsix
        lib/libmsix*
        lib/libmsix*/**
        src/msix/AppxPackaging.hpp
        src/msix/MSIXWindows.hpp
        src/msix/MsixErrors.hpp
        Package.nuspec
        build/**
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact $(_artifact)'
    inputs:
      ArtifactName: $(_artifact)
    condition: succeededOrFailed()
