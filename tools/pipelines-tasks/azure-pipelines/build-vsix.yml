# Pipeline to create extension VSIX

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - tools/pipelines-tasks

pr: none

pool:
  name: 'msix-packaging-pool'

variables:
  tasksRoot: 'tools/pipelines-tasks'
  buildOutRoot: '$(Build.ArtifactStagingDirectory)/buildOutput'
  # Version number
  major: '1'
  minor: '1'
  patch: $[counter(variables['minor'], 0)]
  # Upload results of Semmle analysis
  LGTM.UploadSnapshot: true

steps:
- template: templates/build-steps.yml

- task: TfxInstaller@3
  displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.7.x'

# Package and sign the VSIX
- task: PackageAzureDevOpsExtension@3
  displayName: 'Package Extension: $(tasksRoot)'
  inputs:
    rootFolder: '$(tasksRoot)'
    patternManifest: 'vss-extension.json'
    outputPath: '$(buildOutRoot)\MsixPackagingExtension.vsix'
    publisherId: 'MSIX'
    extensionVersion: '$(major).$(minor).$(patch)'
    extensionVisibility: public
    updateTasksVersion: true

# Generate and publish SBoM file
# It is placed under a _manifest folder by default
- task: ManifestGeneratorTask@0
  displayName: 'Generate Software Bill of Material (SBoM)'
  inputs:
      BuildDropPath: $(buildOutRoot)
      BuildComponentPath: '$(tasksRoot)'
      AdditionalComponentDetectorArgs: '--DirectoryExclusionList $(tasksRoot)\test'
      PackageName: 'MSIX Packaging Extension'
      PackageVersion: '$(major).$(minor).$(patch)'

- task: DropValidatorTask@0
  inputs:
    BuildDropPath: $(buildOutRoot)
    OutputPath: $(buildOutRoot)/_manifest/sbom_validation.json
    ValidateSignature: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish SBoM'
  inputs:
    targetPath: '$(buildOutRoot)\_manifest'
    artifact: 'SBoM'
    publishLocation: 'pipeline'

# Sign the package
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning'
  inputs:
    ConnectedServiceName: 'ESRP CodeSigning'
    FolderPath: '$(buildOutRoot)'
    Pattern: MsixPackagingExtension.vsix
    signConfigType: inlineSignParams
    inlineOperation: |
     [
      {
          "KeyCode" : "CP-233016",
          "OperationCode" : "OpcSign",
          "Parameters" : {
              "FileDigest" : "/fd SHA256"
          },
          "ToolName" : "sign",
          "ToolVersion" : "1.0"
      },
      {
          "KeyCode" : "CP-233016",
          "OperationCode" : "OpcVerify",
          "Parameters" : {},
          "ToolName" : "sign",
          "ToolVersion" : "1.0"
      }
     ]

- task: PublishPipelineArtifact@1
  displayName: 'Publish VSIX artifact'
  inputs:
    targetPath: '$(buildOutRoot)\MsixPackagingExtension.vsix'
    artifact: 'VSIX'
    publishLocation: 'pipeline'

# Publish privately
# Use different task IDs from public extension to prevent clashing.
- task: PublishAzureDevOpsExtension@3
  displayName: 'Publish Extension'
  inputs:
    connectedServiceName: 'Visual Studio Marketplace - MSIX'
    fileType: vsix
    vsixFile: '$(buildOutRoot)\MsixPackagingExtension.vsix'
    extensionId: 'msix-ci-automation-task-dev'
    extensionName: 'MSIX Packaging (Preview)'
    extensionVersion: '$(major).$(minor).$(patch)'
    updateTasksId: true
    extensionVisibility: 'privatepreview'
