//
//
//  Copyright (C) 2017 Microsoft.  All rights reserved.
//  See LICENSE file in the project root for full license information.
// 
//  This file is generated by CMake. Do not edit.
//
#include "AppxPackaging.hpp"
#include "ComHelper.hpp"
#include "AppxFactory.hpp"

namespace MSIX {
    namespace Resource {

        enum Type
        {
            Certificates,
            ContentType,
            BlockMap,
            AppxManifest,
            AppxBundleManifest
        };

        const size_t resourceLength = 22;
        const std::uint8_t resourceByte[resourceLength] = {0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    }

    inline std::vector<ComPtr<IStream>> GetResources(IMsixFactory* factory, Resource::Type type)
    {
        std::vector<ComPtr<IStream>> result;
        switch(type)
        {
            case Resource::Certificates:
                
                break;
            case Resource::ContentType:
                
                break;
            case Resource::BlockMap:
                
                break;
            case Resource::AppxManifest:
                
                
                break;
            case Resource::AppxBundleManifest:
                
                
                break;
        }
        return result;
    }
}
